<?php

namespace {{namespace}};

use Kyrax324\Queriplex\Queriplex;

class {{class}} extends Queriplex
{
	public $sortingKey = "sortBy";

    /**
    * Get the filtering rules that apply to the model builder.
    *
    * @return array
    */
    public function filterRules()
    {
        return [
			'id' => 'id',
			'search' => (fn ($query, $value) => $this->searchQuery($query, $value))
        ];
    }

    /**
    * Get the sorting rules that apply to the model builder.
    *
    * @return array
    */
    public function sortRules()
    {
		$order_mode = $this->getInput('sortDesc') ? "DESC" : "ASC";

		return [
			"id" => fn ($query) => $query->orderBy('id', $order_mode),
			"created_time" => fn ($query) => $query->orderBy('created_at', $order_mode),
		];
    }

	private function searchQuery($query, $value)
	{
		$search_by = $this->getInput('searchBy');

		$common_searchable = [
			'id',
			'name',
		];

		if (in_array($search_by, $common_searchable)) {
			$query->search($search_by, $value);
		}else{
			switch ($search_by) {
				default:
					break;
			}
		}

		return null;
	}
}